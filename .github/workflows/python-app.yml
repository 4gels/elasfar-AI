name: Python CI and Model Training

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 0 * * 0' 

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  train:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install transformers==4.44.2 torch==2.4.1 datasets==2.20.0 pandas==2.2.2 huggingface_hub==0.23.4
    - name: Download conversation data
      env:
        MONGODB_URI: ${{ secrets.MONGODB_URI }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
      run: |
        curl -H "Authorization: Bearer $(echo $JWT_SECRET | jwt encode --secret=$JWT_SECRET)" \
        https://portfolio-backend-beta-two.vercel.app/api/conversations/export > training_data.csv
    - name: Train model
      env:
        HUGGING_FACE_TOKEN: ${{ secrets.HUGGING_FACE_TOKEN }}
      run: |
        python train.py
    - name: Push model to Hugging Face
      env:
        HUGGING_FACE_TOKEN: ${{ secrets.HUGGING_FACE_TOKEN }}
      run: |
        python -c "from huggingface_hub import login, HfApi; login('$HUGGING_FACE_TOKEN'); api = HfApi(); api.upload_folder(folder_path='./elasfar-AI', repo_id='ibrahimlasfar/elasfar-AI', repo_type='model')"